#!/usr/bin/env python3
# =============================================================================
# SCRIPT DE INICIO PARA EL SISTEMA DE ZONAS DE COBERTURA
# =============================================================================
"""
Este script es el punto de entrada principal para ejecutar la aplicaci√≥n
del Sistema de Zonas de Cobertura. Se encarga de:

1. Verificar que Python tenga la versi√≥n correcta
2. Inicializar la base de datos
3. Verificar que todas las dependencias est√©n instaladas
4. Mostrar informaci√≥n del sistema
5. Iniciar el servidor Flask

Uso:
    python run.py

El shebang (#!/usr/bin/env python3) permite ejecutar el script directamente
en sistemas Unix/Linux con: ./run.py
"""

# =============================================================================
# IMPORTS - Importaci√≥n de librer√≠as necesarias
# =============================================================================

# os: Para operaciones del sistema operativo
import os
# sys: Para acceso a informaci√≥n del sistema y salida del programa
import sys
# Importar la aplicaci√≥n Flask
from app import app

# =============================================================================
# FUNCI√ìN PRINCIPAL
# =============================================================================

def main():
    """
    Funci√≥n principal para iniciar la aplicaci√≥n.
    
    Esta funci√≥n ejecuta todos los pasos necesarios para iniciar la aplicaci√≥n:
    verificaci√≥n de requisitos, inicializaci√≥n de la base de datos, verificaci√≥n
    de dependencias, y finalmente el inicio del servidor Flask.
    """
    
    # =====================================================================
    # ENCABEZADO DE BIENVENIDA
    # =====================================================================
    print("=" * 60)
    print("üöÄ Sistema de Zonas de Cobertura - Delivery")
    print("=" * 60)
    
    # =====================================================================
    # VERIFICACI√ìN DE VERSI√ìN DE PYTHON
    # =====================================================================
    # Verificar que la versi√≥n de Python sea 3.7 o superior
    # sys.version_info es una tupla con (major, minor, micro)
    if sys.version_info < (3, 7):
        print("‚ùå Error: Se requiere Python 3.7 o superior")
        # sys.exit(1) termina el programa con c√≥digo de error 1
        sys.exit(1)
    
    # Mostrar la versi√≥n de Python detectada
    print(f"‚úÖ Python {sys.version.split()[0]} detectado")
    
    
    # =====================================================================
    # VERIFICACI√ìN DE DEPENDENCIAS
    # =====================================================================
    try:
        # Intentar importar todas las librer√≠as necesarias
        import flask      # Framework web
        import requests   # Para peticiones HTTP
        import geopy      # Para geocodificaci√≥n
        import shapely    # Para operaciones geom√©tricas
        print("‚úÖ Todas las dependencias est√°n instaladas")
    except ImportError as e:
        # Si falta alguna dependencia, mostrar el error y c√≥mo solucionarlo
        print(f"‚ùå Dependencia faltante: {e}")
        print("üí° Ejecute: pip install -r requirements.txt")
        sys.exit(1)
    
    # =====================================================================
    # INFORMACI√ìN DEL SISTEMA
    # =====================================================================
    print("\nüìã Informaci√≥n del Sistema:")
    print(f"   ‚Ä¢ Puerto: 5000")
    print(f"   ‚Ä¢ Modo: {'Desarrollo' if app.debug else 'Producci√≥n'}")
    print(f"   ‚Ä¢ Mapa por defecto: Buenos Aires, Argentina")
    
    print("\nüåê Acceso:")
    print("   ‚Ä¢ Aplicaci√≥n: http://localhost:5000")
    print("   ‚Ä¢ API: http://localhost:5000/api/")
    
    print("\nüìö Funcionalidades:")
    print("   ‚Ä¢ ‚úÖ Gesti√≥n de sucursales")
    print("   ‚Ä¢ ‚úÖ Dibujo de zonas de cobertura")
    print("   ‚Ä¢ ‚úÖ Consulta de direcciones")
    print("   ‚Ä¢ ‚úÖ Gesti√≥n de calles y alturas")
    print("   ‚Ä¢ ‚úÖ Mapa interactivo")
    
    # =====================================================================
    # INICIO DEL SERVIDOR
    # =====================================================================
    print("\n" + "=" * 60)
    print("üéØ Iniciando servidor...")
    print("   Presione Ctrl+C para detener")
    print("=" * 60)
    
    try:
        # Iniciar el servidor Flask con configuraci√≥n espec√≠fica
        app.run(
            host='0.0.0.0',    # Escuchar en todas las interfaces de red
            port=5000,         # Puerto donde correr√° la aplicaci√≥n
            debug=True,        # Modo debug activado (recarga autom√°tica)
            use_reloader=True  # Recargar autom√°ticamente cuando cambien los archivos
        )
    except KeyboardInterrupt:
        # Si el usuario presiona Ctrl+C, mostrar mensaje de despedida
        print("\n\nüëã Servidor detenido por el usuario")
    except Exception as e:
        # Si hay alg√∫n error inesperado al iniciar el servidor
        print(f"\n‚ùå Error iniciando servidor: {e}")
        sys.exit(1)

# =============================================================================
# PUNTO DE ENTRADA DEL SCRIPT
# =============================================================================

if __name__ == '__main__':
    """
    Esta condici√≥n verifica si el script se est√° ejecutando directamente
    (no importado como m√≥dulo). Solo en ese caso se ejecuta la funci√≥n main().
    
    Esto permite que el archivo pueda ser importado sin ejecutar autom√°ticamente
    la funci√≥n main(), lo cual es √∫til para testing o importaci√≥n en otros m√≥dulos.
    """
    main()
